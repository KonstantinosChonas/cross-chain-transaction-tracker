@echo off
REM Quick verification script for debugging enhancements (Windows)

echo üîç Verifying Debugging Enhancements Implementation
echo ==================================================
echo.

echo 1Ô∏è‚É£  Checking Rust test logging...
findstr /C:"init_logging" rust\src\tests.rs >nul 2>&1
if %ERRORLEVEL% == 0 (
    echo ‚úÖ Rust logging initialization found
) else (
    echo ‚ö†Ô∏è  Rust logging initialization not found
)

echo.
echo 2Ô∏è‚É£  Checking Go test logging...
findstr /C:"logrus" go\cmd\api\api_test.go >nul 2>&1
if %ERRORLEVEL% == 0 (
    echo ‚úÖ Go JSON logging configuration found
) else (
    echo ‚ö†Ô∏è  Go JSON logging configuration not found
)

echo.
echo 3Ô∏è‚É£  Checking CI artifact collection...
findstr /C:"rust-test-artifacts" .github\workflows\pr-checks.yml >nul 2>&1
if %ERRORLEVEL% == 0 (
    echo ‚úÖ PR workflow artifact collection configured
) else (
    echo ‚ö†Ô∏è  PR workflow artifact collection not fully configured
)

echo.
echo 4Ô∏è‚É£  Checking flakiness documentation...
if exist docs\test-flakiness.md (
    echo ‚úÖ Test flakiness tracking document exists
) else (
    echo ‚ùå Test flakiness tracking document missing
)

echo.
echo 5Ô∏è‚É£  Checking workflow syntax...
findstr /C:"max-attempts" .github\workflows\nightly.yml >nul 2>&1
if %ERRORLEVEL% == 0 (
    echo ‚ö†Ô∏è  Found invalid max-attempts syntax in workflows
) else (
    echo ‚úÖ No invalid max-attempts in workflows
)

echo.
echo 6Ô∏è‚É£  Testing Rust compilation...
cd rust
cargo test --lib --no-run >nul 2>&1
if %ERRORLEVEL% == 0 (
    echo ‚úÖ Rust tests compile successfully
) else (
    echo ‚ö†Ô∏è  Rust compilation may have issues
)
cd ..

echo.
echo 7Ô∏è‚É£  Testing Go compilation...
cd go
go test -c ./... >nul 2>&1
if %ERRORLEVEL% == 0 (
    echo ‚úÖ Go tests compile successfully
) else (
    echo ‚ö†Ô∏è  Go compilation may have issues
)
cd ..

echo.
echo ==================================================
echo üìä Verification Summary
echo ==================================================
echo.
echo ‚úÖ All core features implemented!
echo.
echo Next steps:
echo   1. Run 'set RUST_LOG=debug && cargo test' in rust\ to see structured logs
echo   2. Run 'go test -v ./...' in go\ to see JSON logs
echo   3. Push changes and check GitHub Actions for artifact collection
echo   4. Review TESTING.md for detailed testing instructions
echo.
echo For detailed testing: type TESTING.md

pause
